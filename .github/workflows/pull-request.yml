name: Pull Request Validation

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '22'

jobs:
  validate:
    name: Build and Test Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        echo "📦 Installing dependencies..."
        npm ci
        
    - name: Fix Prisma issues
      run: |
        echo "🔧 Fixing Prisma issues..."
        ./scripts/fix-prisma.sh fix
        
    - name: Run linting
      run: |
        echo "🔍 Running ESLint..."
        npm run lint
        
    - name: Run tests with coverage
      run: |
        echo "🧪 Running tests with coverage..."
        npm run test:cov
        
    - name: Build application
      run: |
        echo "🏗️ Building application..."
        npm run build
        
    - name: Verify build output
      run: |
        echo "✅ Verifying build output..."
        if [ ! -d "dist" ]; then
          echo "❌ Build directory 'dist' not found"
          exit 1
        fi
        
        if [ ! -f "dist/main.js" ]; then
          echo "❌ Main application file 'dist/main.js' not found"
          exit 1
        fi
        
        echo "✅ Build verification passed"
        echo "📁 Build artifacts:"
        ls -la dist/
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
        
    - name: Run npm audit
      run: |
        echo "🔒 Running security audit..."
        npm audit --audit-level=moderate || {
          echo "⚠️ Security vulnerabilities found. Please review and fix them."
          echo "You can run 'npm audit fix' to automatically fix some issues."
          exit 1
        }
        
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
      continue-on-error: true 